/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.hadoop.hbase.replication.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * Mapping for WALEdit
 * 
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-02-13")
public class TWalLEdit implements com.xiaomi.infra.thirdparty.org.apache.thrift.TBase<TWalLEdit, TWalLEdit._Fields>, java.io.Serializable, Cloneable, Comparable<TWalLEdit> {
  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TStruct STRUCT_DESC = new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TStruct("TWalLEdit");

  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField MUTATIONS_FIELD_DESC = new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField("mutations", com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.LIST, (short)1);

  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TWalLEditStandardSchemeFactory();
  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TWalLEditTupleSchemeFactory();

  public @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable java.util.List<TColumnValue> mutations; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements com.xiaomi.infra.thirdparty.org.apache.thrift.TFieldIdEnum {
    MUTATIONS((short)1, "mutations");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MUTATIONS
          return MUTATIONS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MUTATIONS, new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData("mutations", com.xiaomi.infra.thirdparty.org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.ListMetaData(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.LIST, 
            new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.StructMetaData(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, TColumnValue.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TWalLEdit.class, metaDataMap);
  }

  public TWalLEdit() {
  }

  public TWalLEdit(
    java.util.List<TColumnValue> mutations)
  {
    this();
    this.mutations = mutations;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TWalLEdit(TWalLEdit other) {
    if (other.isSetMutations()) {
      java.util.List<TColumnValue> __this__mutations = new java.util.ArrayList<TColumnValue>(other.mutations.size());
      for (TColumnValue other_element : other.mutations) {
        __this__mutations.add(new TColumnValue(other_element));
      }
      this.mutations = __this__mutations;
    }
  }

  public TWalLEdit deepCopy() {
    return new TWalLEdit(this);
  }

  @Override
  public void clear() {
    this.mutations = null;
  }

  public int getMutationsSize() {
    return (this.mutations == null) ? 0 : this.mutations.size();
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public java.util.Iterator<TColumnValue> getMutationsIterator() {
    return (this.mutations == null) ? null : this.mutations.iterator();
  }

  public void addToMutations(TColumnValue elem) {
    if (this.mutations == null) {
      this.mutations = new java.util.ArrayList<TColumnValue>();
    }
    this.mutations.add(elem);
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public java.util.List<TColumnValue> getMutations() {
    return this.mutations;
  }

  public TWalLEdit setMutations(@com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable java.util.List<TColumnValue> mutations) {
    this.mutations = mutations;
    return this;
  }

  public void unsetMutations() {
    this.mutations = null;
  }

  /** Returns true if field mutations is set (has been assigned a value) and false otherwise */
  public boolean isSetMutations() {
    return this.mutations != null;
  }

  public void setMutationsIsSet(boolean value) {
    if (!value) {
      this.mutations = null;
    }
  }

  public void setFieldValue(_Fields field, @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case MUTATIONS:
      if (value == null) {
        unsetMutations();
      } else {
        setMutations((java.util.List<TColumnValue>)value);
      }
      break;

    }
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case MUTATIONS:
      return getMutations();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case MUTATIONS:
      return isSetMutations();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TWalLEdit)
      return this.equals((TWalLEdit)that);
    return false;
  }

  public boolean equals(TWalLEdit that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_mutations = true && this.isSetMutations();
    boolean that_present_mutations = true && that.isSetMutations();
    if (this_present_mutations || that_present_mutations) {
      if (!(this_present_mutations && that_present_mutations))
        return false;
      if (!this.mutations.equals(that.mutations))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMutations()) ? 131071 : 524287);
    if (isSetMutations())
      hashCode = hashCode * 8191 + mutations.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TWalLEdit other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetMutations()).compareTo(other.isSetMutations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMutations()) {
      lastComparison = com.xiaomi.infra.thirdparty.org.apache.thrift.TBaseHelper.compareTo(this.mutations, other.mutations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol iprot) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol oprot) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TWalLEdit(");
    boolean first = true;

    sb.append("mutations:");
    if (this.mutations == null) {
      sb.append("null");
    } else {
      sb.append(this.mutations);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
    // check for required fields
    if (mutations == null) {
      throw new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolException("Required field 'mutations' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TCompactProtocol(new com.xiaomi.infra.thirdparty.org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (com.xiaomi.infra.thirdparty.org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TCompactProtocol(new com.xiaomi.infra.thirdparty.org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (com.xiaomi.infra.thirdparty.org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TWalLEditStandardSchemeFactory implements com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.SchemeFactory {
    public TWalLEditStandardScheme getScheme() {
      return new TWalLEditStandardScheme();
    }
  }

  private static class TWalLEditStandardScheme extends com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.StandardScheme<TWalLEdit> {

    public void read(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol iprot, TWalLEdit struct) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
      com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MUTATIONS
            if (schemeField.type == com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.LIST) {
              {
                com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.mutations = new java.util.ArrayList<TColumnValue>(_list0.size);
                @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable TColumnValue _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new TColumnValue();
                  _elem1.read(iprot);
                  struct.mutations.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setMutationsIsSet(true);
            } else { 
              com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol oprot, TWalLEdit struct) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.mutations != null) {
        oprot.writeFieldBegin(MUTATIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TList(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, struct.mutations.size()));
          for (TColumnValue _iter3 : struct.mutations)
          {
            _iter3.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TWalLEditTupleSchemeFactory implements com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.SchemeFactory {
    public TWalLEditTupleScheme getScheme() {
      return new TWalLEditTupleScheme();
    }
  }

  private static class TWalLEditTupleScheme extends com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.TupleScheme<TWalLEdit> {

    @Override
    public void write(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol prot, TWalLEdit struct) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
      com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TTupleProtocol oprot = (com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        oprot.writeI32(struct.mutations.size());
        for (TColumnValue _iter4 : struct.mutations)
        {
          _iter4.write(oprot);
        }
      }
    }

    @Override
    public void read(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol prot, TWalLEdit struct) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
      com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TTupleProtocol iprot = (com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TList _list5 = new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TList(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.mutations = new java.util.ArrayList<TColumnValue>(_list5.size);
        @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable TColumnValue _elem6;
        for (int _i7 = 0; _i7 < _list5.size; ++_i7)
        {
          _elem6 = new TColumnValue();
          _elem6.read(iprot);
          struct.mutations.add(_elem6);
        }
      }
      struct.setMutationsIsSet(true);
    }
  }

  private static <S extends com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.IScheme> S scheme(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol proto) {
    return (com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

