/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.hadoop.hbase.replication.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-02-13")
public class TEdit implements com.xiaomi.infra.thirdparty.org.apache.thrift.TBase<TEdit, TEdit._Fields>, java.io.Serializable, Cloneable, Comparable<TEdit> {
  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TStruct STRUCT_DESC = new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TStruct("TEdit");

  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField H_LOG_KEY_FIELD_DESC = new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField("hLogKey", com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField WAL_EDIT_FIELD_DESC = new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField("walEdit", com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField CLUSTER_IDS_FIELD_DESC = new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField("clusterIds", com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.LIST, (short)3);

  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TEditStandardSchemeFactory();
  private static final com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TEditTupleSchemeFactory();

  public @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable THLogKey hLogKey; // required
  public @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable TWalLEdit walEdit; // required
  public @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable java.util.List<TClusterId> clusterIds; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements com.xiaomi.infra.thirdparty.org.apache.thrift.TFieldIdEnum {
    H_LOG_KEY((short)1, "hLogKey"),
    WAL_EDIT((short)2, "walEdit"),
    CLUSTER_IDS((short)3, "clusterIds");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // H_LOG_KEY
          return H_LOG_KEY;
        case 2: // WAL_EDIT
          return WAL_EDIT;
        case 3: // CLUSTER_IDS
          return CLUSTER_IDS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.H_LOG_KEY, new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData("hLogKey", com.xiaomi.infra.thirdparty.org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.StructMetaData(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, THLogKey.class)));
    tmpMap.put(_Fields.WAL_EDIT, new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData("walEdit", com.xiaomi.infra.thirdparty.org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.StructMetaData(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, TWalLEdit.class)));
    tmpMap.put(_Fields.CLUSTER_IDS, new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData("clusterIds", com.xiaomi.infra.thirdparty.org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.ListMetaData(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.LIST, 
            new com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.StructMetaData(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, TClusterId.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    com.xiaomi.infra.thirdparty.org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TEdit.class, metaDataMap);
  }

  public TEdit() {
  }

  public TEdit(
    THLogKey hLogKey,
    TWalLEdit walEdit,
    java.util.List<TClusterId> clusterIds)
  {
    this();
    this.hLogKey = hLogKey;
    this.walEdit = walEdit;
    this.clusterIds = clusterIds;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TEdit(TEdit other) {
    if (other.isSetHLogKey()) {
      this.hLogKey = new THLogKey(other.hLogKey);
    }
    if (other.isSetWalEdit()) {
      this.walEdit = new TWalLEdit(other.walEdit);
    }
    if (other.isSetClusterIds()) {
      java.util.List<TClusterId> __this__clusterIds = new java.util.ArrayList<TClusterId>(other.clusterIds.size());
      for (TClusterId other_element : other.clusterIds) {
        __this__clusterIds.add(new TClusterId(other_element));
      }
      this.clusterIds = __this__clusterIds;
    }
  }

  public TEdit deepCopy() {
    return new TEdit(this);
  }

  @Override
  public void clear() {
    this.hLogKey = null;
    this.walEdit = null;
    this.clusterIds = null;
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public THLogKey getHLogKey() {
    return this.hLogKey;
  }

  public TEdit setHLogKey(@com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable THLogKey hLogKey) {
    this.hLogKey = hLogKey;
    return this;
  }

  public void unsetHLogKey() {
    this.hLogKey = null;
  }

  /** Returns true if field hLogKey is set (has been assigned a value) and false otherwise */
  public boolean isSetHLogKey() {
    return this.hLogKey != null;
  }

  public void setHLogKeyIsSet(boolean value) {
    if (!value) {
      this.hLogKey = null;
    }
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public TWalLEdit getWalEdit() {
    return this.walEdit;
  }

  public TEdit setWalEdit(@com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable TWalLEdit walEdit) {
    this.walEdit = walEdit;
    return this;
  }

  public void unsetWalEdit() {
    this.walEdit = null;
  }

  /** Returns true if field walEdit is set (has been assigned a value) and false otherwise */
  public boolean isSetWalEdit() {
    return this.walEdit != null;
  }

  public void setWalEditIsSet(boolean value) {
    if (!value) {
      this.walEdit = null;
    }
  }

  public int getClusterIdsSize() {
    return (this.clusterIds == null) ? 0 : this.clusterIds.size();
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public java.util.Iterator<TClusterId> getClusterIdsIterator() {
    return (this.clusterIds == null) ? null : this.clusterIds.iterator();
  }

  public void addToClusterIds(TClusterId elem) {
    if (this.clusterIds == null) {
      this.clusterIds = new java.util.ArrayList<TClusterId>();
    }
    this.clusterIds.add(elem);
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public java.util.List<TClusterId> getClusterIds() {
    return this.clusterIds;
  }

  public TEdit setClusterIds(@com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable java.util.List<TClusterId> clusterIds) {
    this.clusterIds = clusterIds;
    return this;
  }

  public void unsetClusterIds() {
    this.clusterIds = null;
  }

  /** Returns true if field clusterIds is set (has been assigned a value) and false otherwise */
  public boolean isSetClusterIds() {
    return this.clusterIds != null;
  }

  public void setClusterIdsIsSet(boolean value) {
    if (!value) {
      this.clusterIds = null;
    }
  }

  public void setFieldValue(_Fields field, @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case H_LOG_KEY:
      if (value == null) {
        unsetHLogKey();
      } else {
        setHLogKey((THLogKey)value);
      }
      break;

    case WAL_EDIT:
      if (value == null) {
        unsetWalEdit();
      } else {
        setWalEdit((TWalLEdit)value);
      }
      break;

    case CLUSTER_IDS:
      if (value == null) {
        unsetClusterIds();
      } else {
        setClusterIds((java.util.List<TClusterId>)value);
      }
      break;

    }
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case H_LOG_KEY:
      return getHLogKey();

    case WAL_EDIT:
      return getWalEdit();

    case CLUSTER_IDS:
      return getClusterIds();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case H_LOG_KEY:
      return isSetHLogKey();
    case WAL_EDIT:
      return isSetWalEdit();
    case CLUSTER_IDS:
      return isSetClusterIds();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TEdit)
      return this.equals((TEdit)that);
    return false;
  }

  public boolean equals(TEdit that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_hLogKey = true && this.isSetHLogKey();
    boolean that_present_hLogKey = true && that.isSetHLogKey();
    if (this_present_hLogKey || that_present_hLogKey) {
      if (!(this_present_hLogKey && that_present_hLogKey))
        return false;
      if (!this.hLogKey.equals(that.hLogKey))
        return false;
    }

    boolean this_present_walEdit = true && this.isSetWalEdit();
    boolean that_present_walEdit = true && that.isSetWalEdit();
    if (this_present_walEdit || that_present_walEdit) {
      if (!(this_present_walEdit && that_present_walEdit))
        return false;
      if (!this.walEdit.equals(that.walEdit))
        return false;
    }

    boolean this_present_clusterIds = true && this.isSetClusterIds();
    boolean that_present_clusterIds = true && that.isSetClusterIds();
    if (this_present_clusterIds || that_present_clusterIds) {
      if (!(this_present_clusterIds && that_present_clusterIds))
        return false;
      if (!this.clusterIds.equals(that.clusterIds))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetHLogKey()) ? 131071 : 524287);
    if (isSetHLogKey())
      hashCode = hashCode * 8191 + hLogKey.hashCode();

    hashCode = hashCode * 8191 + ((isSetWalEdit()) ? 131071 : 524287);
    if (isSetWalEdit())
      hashCode = hashCode * 8191 + walEdit.hashCode();

    hashCode = hashCode * 8191 + ((isSetClusterIds()) ? 131071 : 524287);
    if (isSetClusterIds())
      hashCode = hashCode * 8191 + clusterIds.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TEdit other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetHLogKey()).compareTo(other.isSetHLogKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHLogKey()) {
      lastComparison = com.xiaomi.infra.thirdparty.org.apache.thrift.TBaseHelper.compareTo(this.hLogKey, other.hLogKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWalEdit()).compareTo(other.isSetWalEdit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWalEdit()) {
      lastComparison = com.xiaomi.infra.thirdparty.org.apache.thrift.TBaseHelper.compareTo(this.walEdit, other.walEdit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClusterIds()).compareTo(other.isSetClusterIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClusterIds()) {
      lastComparison = com.xiaomi.infra.thirdparty.org.apache.thrift.TBaseHelper.compareTo(this.clusterIds, other.clusterIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol iprot) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol oprot) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TEdit(");
    boolean first = true;

    sb.append("hLogKey:");
    if (this.hLogKey == null) {
      sb.append("null");
    } else {
      sb.append(this.hLogKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("walEdit:");
    if (this.walEdit == null) {
      sb.append("null");
    } else {
      sb.append(this.walEdit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clusterIds:");
    if (this.clusterIds == null) {
      sb.append("null");
    } else {
      sb.append(this.clusterIds);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
    // check for required fields
    if (hLogKey == null) {
      throw new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolException("Required field 'hLogKey' was not present! Struct: " + toString());
    }
    if (walEdit == null) {
      throw new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolException("Required field 'walEdit' was not present! Struct: " + toString());
    }
    if (clusterIds == null) {
      throw new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolException("Required field 'clusterIds' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (hLogKey != null) {
      hLogKey.validate();
    }
    if (walEdit != null) {
      walEdit.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TCompactProtocol(new com.xiaomi.infra.thirdparty.org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (com.xiaomi.infra.thirdparty.org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TCompactProtocol(new com.xiaomi.infra.thirdparty.org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (com.xiaomi.infra.thirdparty.org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TEditStandardSchemeFactory implements com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.SchemeFactory {
    public TEditStandardScheme getScheme() {
      return new TEditStandardScheme();
    }
  }

  private static class TEditStandardScheme extends com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.StandardScheme<TEdit> {

    public void read(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol iprot, TEdit struct) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
      com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // H_LOG_KEY
            if (schemeField.type == com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT) {
              struct.hLogKey = new THLogKey();
              struct.hLogKey.read(iprot);
              struct.setHLogKeyIsSet(true);
            } else { 
              com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WAL_EDIT
            if (schemeField.type == com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT) {
              struct.walEdit = new TWalLEdit();
              struct.walEdit.read(iprot);
              struct.setWalEditIsSet(true);
            } else { 
              com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLUSTER_IDS
            if (schemeField.type == com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.LIST) {
              {
                com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.clusterIds = new java.util.ArrayList<TClusterId>(_list8.size);
                @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable TClusterId _elem9;
                for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                {
                  _elem9 = new TClusterId();
                  _elem9.read(iprot);
                  struct.clusterIds.add(_elem9);
                }
                iprot.readListEnd();
              }
              struct.setClusterIdsIsSet(true);
            } else { 
              com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol oprot, TEdit struct) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.hLogKey != null) {
        oprot.writeFieldBegin(H_LOG_KEY_FIELD_DESC);
        struct.hLogKey.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.walEdit != null) {
        oprot.writeFieldBegin(WAL_EDIT_FIELD_DESC);
        struct.walEdit.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.clusterIds != null) {
        oprot.writeFieldBegin(CLUSTER_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TList(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, struct.clusterIds.size()));
          for (TClusterId _iter11 : struct.clusterIds)
          {
            _iter11.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TEditTupleSchemeFactory implements com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.SchemeFactory {
    public TEditTupleScheme getScheme() {
      return new TEditTupleScheme();
    }
  }

  private static class TEditTupleScheme extends com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.TupleScheme<TEdit> {

    @Override
    public void write(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol prot, TEdit struct) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
      com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TTupleProtocol oprot = (com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.hLogKey.write(oprot);
      struct.walEdit.write(oprot);
      {
        oprot.writeI32(struct.clusterIds.size());
        for (TClusterId _iter12 : struct.clusterIds)
        {
          _iter12.write(oprot);
        }
      }
    }

    @Override
    public void read(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol prot, TEdit struct) throws com.xiaomi.infra.thirdparty.org.apache.thrift.TException {
      com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TTupleProtocol iprot = (com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.hLogKey = new THLogKey();
      struct.hLogKey.read(iprot);
      struct.setHLogKeyIsSet(true);
      struct.walEdit = new TWalLEdit();
      struct.walEdit.read(iprot);
      struct.setWalEditIsSet(true);
      {
        com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TList _list13 = new com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TList(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.clusterIds = new java.util.ArrayList<TClusterId>(_list13.size);
        @com.xiaomi.infra.thirdparty.org.apache.thrift.annotation.Nullable TClusterId _elem14;
        for (int _i15 = 0; _i15 < _list13.size; ++_i15)
        {
          _elem14 = new TClusterId();
          _elem14.read(iprot);
          struct.clusterIds.add(_elem14);
        }
      }
      struct.setClusterIdsIsSet(true);
    }
  }

  private static <S extends com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.IScheme> S scheme(com.xiaomi.infra.thirdparty.org.apache.thrift.protocol.TProtocol proto) {
    return (com.xiaomi.infra.thirdparty.org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

