<%doc>
Copyright The Apache Software Foundation

Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 </%doc>

<%args>
List<ServerName> servers = null;
HMaster master;
</%args>

<%import>
        java.util.*;
        java.util.stream.Collectors;
        org.apache.hadoop.util.StringUtils;
        org.apache.hadoop.hbase.replication.ReplicationException;
        org.apache.hadoop.hbase.replication.ReplicationLoadSource;
        org.apache.hadoop.hbase.replication.ReplicationPeerConfig;
        org.apache.hadoop.hbase.util.Bytes;
        org.apache.hadoop.hbase.util.JvmVersion;
        org.apache.hadoop.hbase.util.FSUtils;
        org.apache.hadoop.hbase.master.HMaster;
        org.apache.hadoop.hbase.HConstants;
        org.apache.hadoop.hbase.ServerLoad;
        org.apache.hadoop.hbase.ServerName;
        org.apache.hadoop.hbase.client.HBaseAdmin;
        org.apache.hadoop.hbase.client.HConnectionManager;
        org.apache.hadoop.hbase.HTableDescriptor;
        org.apache.hadoop.hbase.HBaseConfiguration;
        org.apache.hadoop.hbase.util.VersionInfo;
        org.apache.hadoop.hbase.util.Pair;
</%import>


<%if (servers != null && servers.size() > 0)%>

<%java>
ServerName [] serverNames = servers.toArray(new ServerName[servers.size()]);
Arrays.sort(serverNames);
</%java>

<div class="tabbable">
    <ul class="nav nav-pills">
        <li class="active"><a href="#tab_baseStats" data-toggle="tab">Base Stats</a></li>
        <li class=""><a href="#tab_memoryStats" data-toggle="tab">Memory</a></li>
        <li class=""><a href="#tab_requestStats" data-toggle="tab">Requests</a></li>
        <li class=""><a href="#tab_throttlingStats" data-toggle="tab">Throttling</a></li>
        <li class=""><a href="#tab_storeStats" data-toggle="tab">Storefiles</a></li>
        <li class=""><a href="#tab_compactStats" data-toggle="tab">Compactions</a></li>
        <li class=""><a href="#tab_replicationStats" data-toggle="tab">Replications</a></li>
    </ul>
    <div class="tab-content" style="padding-bottom: 9px; border-bottom: 1px solid #ddd;">
        <div class="tab-pane active" id="tab_baseStats">
            <& baseStats; serverNames = serverNames; &>
        </div>
        <div class="tab-pane" id="tab_memoryStats">
            <& memoryStats; serverNames = serverNames; &>
        </div>
        <div class="tab-pane" id="tab_requestStats">
            <& requestStats; serverNames = serverNames; &>
        </div>
        <div class="tab-pane" id="tab_throttlingStats">
            <& throttlingStats; serverNames = serverNames; &>
        </div>
        <div class="tab-pane" id="tab_storeStats">
            <& storeStats; serverNames = serverNames; &>
        </div>
        <div class="tab-pane" id="tab_compactStats">
            <& compactionStats; serverNames = serverNames; &>
        </div>
        <div class="tab-pane" id="tab_replicationStats">
            <& replicationStats; serverNames = serverNames; &>
        </div>

    </div>
</div>

</%if>

<%def baseStats>
<%args>
        ServerName [] serverNames;
</%args>
<table class="table table-striped">
<tr>
    <th>ServerName</th>
    <th>Start time</th>
    <th>Version</th>
    <th>Requests Per Second</th>
    <th>Num. Regions</th>
</tr>
<%java>
    int totalRegions = 0;
    int totalRequests = 0;
    int inconsistentNodeNum = 0;
    String masterVersion = VersionInfo.getVersion();
    for (ServerName serverName: serverNames) {

    ServerLoad sl = master.getServerManager().getLoad(serverName);
    String version = master.getRegionServerVersion(serverName);
    if (!masterVersion.equals(version)) {
        inconsistentNodeNum ++;
    }
    double requestsPerSecond = 0.0;
    int numRegionsOnline = 0;

    if (sl != null) {
        requestsPerSecond = sl.getRequestsPerSecond();
        numRegionsOnline = sl.getNumberOfRegions();
        totalRegions += sl.getNumberOfRegions();
        // Is this correct?  Adding a rate to a measure.
        totalRequests += sl.getNumberOfRequests();
    }
    long startcode = serverName.getStartcode();
</%java>
<tr>
    <td><& serverNameLink; serverName=serverName; &></td>
    <td><% new Date(startcode) %></td>
    <td><% version %></td>
    <td><% String.format("%.0f", requestsPerSecond) %></td>
    <td><% numRegionsOnline %></td>
</tr>
<%java>
}
</%java>
<tr><td>Total:<% servers.size() %></td>
<td></td>
<%if inconsistentNodeNum > 0 %>
  <td style="color:red;"><% inconsistentNodeNum %> nodes with inconsistent version</td>
<%else>
   <td></td>
</%if>
<td><% totalRequests %></td>
<td><% totalRegions %></td>
</tr>
</table>
</%def>

<%def memoryStats>
<%args>
    ServerName [] serverNames;
</%args>
<table class="table table-striped">
<tr>
    <th>ServerName</th>
    <th>Used Heap</th>
    <th>Max Heap</th>
    <th>Memstore Size</th>

</tr>
<%java>
for (ServerName serverName: serverNames) {

    ServerLoad sl = master.getServerManager().getLoad(serverName);
    if (sl != null) {
</%java>
<tr>
    <td><& serverNameLink; serverName=serverName; &></td>
    <td><% sl.getUsedHeapMB() %>m</td>
    <td><% sl.getMaxHeapMB() %>m</td>
    <td><% sl.getMemstoreSizeInMB() %>m</td>

</tr>
<%java>
        }  else {
</%java>
<& emptyStat; serverName=serverName; &>
<%java>
        }
}
</%java>
</table>
</%def>


<%def requestStats>
<%args>
        ServerName [] serverNames;
        </%args>
<table class="table table-striped">
<tr>
    <th>ServerName</th>
    <th>Read Request Per Second</th>
    <th>Write Request Per Second</th>
    <th>Read Request Count</th>
    <th>Write Request Count</th>
</tr>
<%java>
int totalReadPerSecond = 0;
int totalWritePerSecond = 0;
int totalReadRequestsCount = 0;
int totalWriteRequestsCount = 0;
for (ServerName serverName: serverNames) {

ServerLoad sl = master.getServerManager().getLoad(serverName);
if (sl != null) {
  totalReadPerSecond += sl.getReadRequestsPerSecond();
  totalWritePerSecond += sl.getWriteRequestsPerSecond();
  totalReadRequestsCount += sl.getReadRequestsCount();
  totalWriteRequestsCount += sl.getWriteRequestsCount();
</%java>
<tr>
<td><& serverNameLink; serverName=serverName; &></td>
<td><% sl.getReadRequestsPerSecond() %></td>
<td><% sl.getWriteRequestsPerSecond() %></td>
<td><% sl.getReadRequestsCount() %></td>
<td><% sl.getWriteRequestsCount() %></td>
</tr>
<%java>
        }  else {
        </%java>
<& emptyStat; serverName=serverName; &>
<%java>
        }
}
</%java>
<tr><td>Total:<% servers.size() %></td>
<td><% totalReadPerSecond %></td>
<td><% totalWritePerSecond %></td>
<td><% totalReadRequestsCount %></td>
<td><% totalWriteRequestsCount %></td>
</tr>
</table>
</%def>

<%def throttlingStats>
<%args>
        ServerName [] serverNames;
        </%args>
<table class="table table-striped">
<tr>
    <th>ServerName</th>
    <th>Read Capacity Units Per Second</th>
    <th>Write Capacity Units Per Second</th>
    <th>Throttled Read Count</th>
    <th>Throttled Write Count</th>
</tr>
<%java>
int totalReadRequestsByCapacityUnitPerSecond = 0;
int totalWriteRequestsByCapacityUnitPerSecond = 0;
int totalThrottledReadRequestsCount = 0;
int totalThrottledWriteRequestsCount = 0;
for (ServerName serverName: serverNames) {

ServerLoad sl = master.getServerManager().getLoad(serverName);
if (sl != null) {
  totalReadRequestsByCapacityUnitPerSecond += sl.getReadRequestsByCapacityUnitPerSecond();
  totalWriteRequestsByCapacityUnitPerSecond += sl.getWriteRequestsByCapacityUnitPerSecond();
  totalThrottledReadRequestsCount += sl.getThrottledReadRequestsCount();
  totalThrottledWriteRequestsCount += sl.getThrottledWriteRequestsCount();
</%java>
<tr>
<td><& serverNameLink; serverName=serverName; &></td>
<td><% sl.getReadRequestsByCapacityUnitPerSecond() %></td>
<td><% sl.getWriteRequestsByCapacityUnitPerSecond() %></td>
<td><% sl.getThrottledReadRequestsCount() %></td>
<td><% sl.getThrottledWriteRequestsCount() %></td>
</tr>
<%java>
        }  else {
        </%java>
<& emptyStat; serverName=serverName; &>
<%java>
        }
}
</%java>
<tr><td>Total:<% servers.size() %></td>
<td><% totalReadRequestsByCapacityUnitPerSecond %></td>
<td><% totalWriteRequestsByCapacityUnitPerSecond %></td>
<td><% totalThrottledReadRequestsCount %></td>
<td><% totalThrottledWriteRequestsCount %></td>
</tr>
</table>
</%def>

<%def storeStats>
<%args>
        ServerName [] serverNames;
        </%args>
<table class="table table-striped">
<tr>
    <th>ServerName</th>
    <th>Num. Stores</th>
    <th>Num. Storefiles</th>
    <th>Storefile Size Uncompressed</th>
    <th>Storefile Size</th>
    <th>Index Size</th>
    <th>Bloom Size</th>
</tr>
<%java>
for (ServerName serverName: serverNames) {

ServerLoad sl = master.getServerManager().getLoad(serverName);
if (sl != null) {
</%java>
<tr>
<td><& serverNameLink; serverName=serverName; &></td>
<td><% sl.getStores() %></td>
<td><% sl.getStorefiles() %></td>
<td><% sl.getStoreUncompressedSizeMB() %>m</td>
<td><% sl.getStorefileSizeInMB() %>mb</td>
<td><% sl.getTotalStaticIndexSizeKB() %>k</td>
<td><% sl.getTotalStaticBloomSizeKB() %>k</td>
</tr>
<%java>
        }  else {
        </%java>
<& emptyStat; serverName=serverName; &>
<%java>
    }
}
</%java>
</table>
</%def>

<%def compactionStats>
<%args>
        ServerName [] serverNames;
        </%args>
<table class="table table-striped">
<tr>
    <th>ServerName</th>
    <th>Num. Compacting KVs</th>
    <th>Num. Compacted KVs</th>
    <th>Remaining KVs</th>
    <th>Compaction Progress</th>
</tr>
<%java>
for (ServerName serverName: serverNames) {

ServerLoad sl = master.getServerManager().getLoad(serverName);
if (sl != null) {
String percentDone = "";
if  (sl.getTotalCompactingKVs() > 0) {
     percentDone = String.format("%.2f", 100 *
        ((float) sl.getCurrentCompactedKVs() / sl.getTotalCompactingKVs())) + "%";
}
</%java>
<tr>
<td><& serverNameLink; serverName=serverName; &></td>
<td><% sl.getTotalCompactingKVs() %></td>
<td><% sl.getCurrentCompactedKVs() %></td>
<td><% sl.getTotalCompactingKVs() - sl.getCurrentCompactedKVs() %></td>
<td><% percentDone %></td>
</tr>
<%java>
        }  else {
        </%java>
<& emptyStat; serverName=serverName; &>
<%java>
    }
}
</%java>
</table>
</%def>

<%def replicationStats>
<%args>
    ServerName [] serverNames;
</%args>
<%java>
        HashMap<String, List<Pair<ServerName, ReplicationLoadSource>>> replicationLoadSourceMap
            = master.getReplicationLoad(serverNames);
        List<String> peers = null;
        if (replicationLoadSourceMap != null && replicationLoadSourceMap.size() > 0){
            peers = new ArrayList<>(replicationLoadSourceMap.keySet());
            Collections.sort(peers);
        }
</%java>

<%if (replicationLoadSourceMap != null && replicationLoadSourceMap.size() > 0) %>

<div class="tabbable">
    <ul class="nav nav-tabs">
        <%java>
        String active = "active";
        for (String peer : peers){
        </%java>
            <li class=<% active %>><a href="#tab_<% peer %>" data-toggle="tab">Peer <% peer %></a> </li>
        <%java>
        active = "";
        }
        </%java>
    </ul>
    <div class="tab-content">
        <%java>
            active = "active";
            for (String peer : peers){
        </%java>
            <div class="tab-pane <% active %>" id="tab_<% peer %>">
                <table class="table table-striped">
                    <tr>
                        <th>Server</th>
                        <th>AgeOfLastShippedOp</th>
                        <th>SizeOfLogQueue</th>
                        <th>ReplicationLag</th>
                    </tr>

                    <%for Pair<ServerName, ReplicationLoadSource> pair: replicationLoadSourceMap.get(peer) %>
                    <tr>
                        <td><& serverNameLink; serverName=pair.getFirst(); &></td>
                        <td><% StringUtils.formatTime(pair.getSecond().getAgeOfLastShippedOp()) %></td>
                        <td><% pair.getSecond().getSizeOfLogQueue() %></td>
                        <td><% StringUtils.formatTime(pair.getSecond().getReplicationLag()) %></td>
                    </tr>
                    </%for>
		</table>
            </div>
        <%java>
                active = "";
                }
        </%java>
    </div>
</div>
<%else>
    <p>No Peers Metrics</p>
</%if>
</%def>



<%def serverNameLink>
        <%args>
        ServerName serverName;
        </%args>
        <%java>
        int infoPort = master.getRegionServerInfoPort(serverName);
        String url = "//" + serverName.getHostname() + ":" + infoPort + "/";
        </%java>

        <%if (infoPort > 0) %>
            <a href="<% url %>"><% serverName.getServerName() %></a>
        <%else>
            <% serverName.getServerName() %>
        </%if>
</%def>

<%def emptyStat>
        <%args>
        ServerName serverName;
        </%args>
    <tr>
    <td><& serverNameLink; serverName=serverName; &></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    </tr>
</%def>
