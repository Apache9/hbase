/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.hadoop.hbase.thrift2.generated;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TBloomFilterType implements org.apache.thrift.TEnum {
  /**
   * Bloomfilters disabled
   */
  NONE(0),
  /**
   * Bloom enabled with Table row as Key
   */
  ROW(1),
  /**
   * Bloom enabled with Table row &amp; column (family+qualifier) as Key
   */
  ROWCOL(2),
  /**
   * Bloom enabled with Table row prefix as Key, specify the length of the prefix
   */
  ROWPREFIX_FIXED_LENGTH(3),
  /**
   * Bloom enabled with Table row prefix as Key, specify the delimiter of the prefix
   */
  ROWPREFIX_DELIMITED(4);

  private final int value;

  private TBloomFilterType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TBloomFilterType findByValue(int value) { 
    switch (value) {
      case 0:
        return NONE;
      case 1:
        return ROW;
      case 2:
        return ROWCOL;
      case 3:
        return ROWPREFIX_FIXED_LENGTH;
      case 4:
        return ROWPREFIX_DELIMITED;
      default:
        return null;
    }
  }
}
